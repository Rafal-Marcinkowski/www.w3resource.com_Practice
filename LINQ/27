//27.Write a program in C# Sharp to generate a Right Outer Join between two data sets.
//Expected Output :

//Here is the list after joining  :                                                                             

//Item ID         Item Name       Purchase Quantity                                                             
//-------------------------------------------------------                                                       
//3               Butter                  800                                                                   
//5               Honey                   650                                                                   
//3               Butter                  900                                                                   
//4               Brade                   700                                                                   
//3               Butter                  900                                                                   
//4               Brade                   650                                                                   
//1               Biscuit                 458

List<Item> items = new List<Item>
{
    new Item(1, "Biscuit"),
    new Item(2, "Chocolate"),
    new Item(3, "Butter"),
    new Item(4, "Bread"),
    new Item(5, "Honey")
};
List<Purchase> purchases = new List<Purchase>
{
    new Purchase(1, 458),
    new Purchase(2, 650),
    new Purchase(3, 800),
    new Purchase(3, 900),
    new Purchase(3, 900),
    new Purchase(4, 700),
    new Purchase(4, 650),
};

var joined2DataSetsMethodSyntax = purchases.GroupJoin(items, p => p.ItemId, i => i.Id, (p, i) =>
                                                       new { Purchases = p, Items = i })
                                            .SelectMany(q => q.Items.DefaultIfEmpty(new Item(0, "")), (q, i) =>
                                            new
                                            {
                                                ItemId = i.Id,
                                                ItemName = i.ItemName,
                                                PurchaseQuantity = q.Purchases.ItemQuantity,
                                            });

Console.WriteLine("Item ID         Item Name       Purchase Quantity");
Console.WriteLine("-------------------------------------------------------");
foreach (var item in joined2DataSetsMethodSyntax)
{
    Console.WriteLine($"{item.ItemId,-6}          {item.ItemName,-11}              {item.PurchaseQuantity}");
}

var querySyntaxJoin = from p in purchases
                      join i in items
                      on p.ItemId equals i.Id
                      into g
                      from x in g.DefaultIfEmpty(new Item(0, ""))
                      select new
                      {
                          ItemId = x.Id,
                          ItemName = x.ItemName,
                          PurchaseQuantity = p.ItemQuantity
                      };

Console.WriteLine();

Console.WriteLine("Item ID         Item Name       Purchase Quantity");
Console.WriteLine("-------------------------------------------------------");
foreach (var item in querySyntaxJoin)
{
    Console.WriteLine($"{item.ItemId,-6}          {item.ItemName,-11}              {item.PurchaseQuantity}");
}

class Item
{
    public Item(int id, string itemName)
    {
        Id = id;
        ItemName = itemName;
    }
    public int Id { get; set; }
    public string ItemName { get; set; }
}
class Purchase
{
    public Purchase(int id, int itemQuantity)
    {
        ItemId = id;
        ItemQuantity = itemQuantity;
    }
    public int ItemId { get; set; }
    public int ItemQuantity { get; set; }
}
